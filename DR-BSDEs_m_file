N=400;
T=2;
t = (0:(T/N):T)'; %t=[0,1*(T/N),2*(T/N),..., T]
omega0 = [0;rand(N,1)>0.5]; %creates a sequence of 0 and 1
X = cumsum(omega0) + 1; %computes the partial sums
omega=omega0(2:end); %chops off the zero at the beginning of omega0

delta=(T/N);
z = zeros(N+1,N+1);
y = zeros(N+1,N+1);
L = zeros(N+1,N+1);
d = zeros(N+1,N+1);
YM = zeros(2*N+1,N+1);
ZM = zeros(2*N+1,N+1);
W = zeros(2*N+1,N+1);
B = zeros(N+1,1);
YS = zeros(((N+1)*(N+2))/2,3);
RW = zeros(N+1,4);
r = .1;
sigma = .6;
theta = 0;
S = zeros(N+1,N+1);
InS = 50;
K = 52;
XFreq = 4;
I = (0:(1/XFreq):T);

% creates Brownian Motion at time = 1
for j = N+1:-1:1
    B(j,1)=(delta^.5)*(N-2*(j-1)); %
end

%creates random walk
for i = 1:N+1
    for j = 1:i
        W(j,i)= (i - (2*j) +1)*sqrt(delta);
        S(j,i) = InS*exp(sigma*W(j,i) - (sigma^2)*(t(i)/2) + (r + sigma*theta)*t(i)) ;%
    end
end

%terminal condition
for j = 1:N+1
    y(j,N+1)= max(0,K - S(j,N+1) ); 
    %sin(abs(
    L(j,N+1) = K;
end

%using above equations
for i = N:-1:1
    for j = 1:i
        
        L(j,i) = K;
        
        
        x = 0;
        
        %dp = (.5*(y(j,i+1)+y(j+1,i+1))) - (abs(.5*(y(j,i+1)+y(j+1,i+1)) + x ) * delta) - L(j,i);
        %if dp < 0
        %   d(j,i) = dp;
        %else
        %end
        for w = 2:(XFreq*T)+1
            if t(i) == I(w)
                x = 1;
            end
        end
        
        if x == 0  
            z(j,i) =  (y(j,i+1)-y(j+1,i+1))/(2*sigma*(delta^.5));
            y(j,i) = (.5*(y(j,i+1)+y(j+1,i+1))) - (r*(.5*(y(j,i+1)+y(j+1,i+1)) + sigma*theta*z(j,i)) * delta);
        else
            z(j,i) = (max(y(j,i+1), max(0,K - S(j,i+1))) - max(y(j+1,i+1),max(0,K - S(j+1,i+1))))/(2*sigma*(delta^.5));
            y(j,i) = ((  max(y(j,i+1),max(0,K - S(j,i+1))) + max(y(j+1,i+1),max(0,K - S(j+1,i+1)))  )) / (2 + 2*r* delta);
        end
        
    end
end



for j=1:N+1
    
    for i=1:j
        c = (((j-1)*(j))/2) + i;
        YS(c,1)= delta*(j-1);
        YS(c,2)= (delta^.5)*(j-2*i+1);
        YS(c,3)= y(i,j);
    end
    
end

YS(1,3)

for j=1:N+1
    
    for i=1:j
        c = (((j-1)*(j))/2) + i;
        SS(c,1)= delta*(j-1);
        SS(c,2)= (delta^.5)*(j-2*i+1);
        SS(c,3)= S(i,j);
    end
    
end

for j=1:N+1
    
    for i=1:j
        c = (((j-1)*(j))/2) + i;
        LS(c,1)= delta*(j-1);
        LS(c,2)= (delta^.5)*(j-2*i+1);
        LS(c,3)= L(i,j);
    end
    
end


for i=1:N+1
    RW(i,1)= delta*(i-1);
    RW(i,2)=(delta^.5)*(i-2*X(i)+1);
    RW(i,3)= y(X(i),i);
    RW(i,4)= S(X(i),i);
end

%creates the mesh for the 3d graphs
rangeY = floor(min(YS(:,2))):(delta^.5):ceil(max(YS(:,2)));
rangeX = floor(min(YS(:,1))):delta:ceil(max(YS(:,1)));
rangeS = floor(min(SS(:,2))):(delta^.5):ceil(max(SS(:,2)));

[Xa,Ya] = meshgrid(rangeX,rangeY);
[XSa,Sa] = meshgrid(rangeX,rangeS);

Za = griddata(YS(:,1),YS(:,2),YS(:,3),Xa,Ya);
Ra = griddata(RW(:,1),RW(:,2),RW(:,3),Xa,Ya);
Zb = griddata(LS(:,1),LS(:,2),LS(:,3),Xa,Ya);
ZS = griddata(SS(:,1),SS(:,2),SS(:,3),XSa,Sa);


hold off

whitebg([1 1 1])

figure
surf(Xa,Ya,Za, 'EdgeColor','none');
title('The solution on surface')
xlabel('') % x-axis label
ylabel('sine and cosine values') % y-axis label
colormap summer
hold on

plot3(RW(:,1),RW(:,2),RW(:,3));
hold on

plot3(RW(:,1),RW(:,2),zeros(N+1,1));
hold on

figure
surf(Xa,Ya,ZS, 'EdgeColor','none');
title('The solution on surface')
xlabel('') % x-axis label
ylabel('sine and cosine values') % y-axis label
colormap summer
hold on

plot3(Xa,Ya,Zb);
shading interp

hold on

plot3(RW(:,1),RW(:,2),RW(:,4));
hold on

plot3(RW(:,1),RW(:,2),zeros(N+1,1));
hold on

YM(N+1,1)=y(1,1);

for i=2:N+1
    for j=1:i
        YM(N-i+2*j,i)=y(j,i);
    end
    
    for j=1:i-1
        YM(N-i+2*j+1,i)=(YM(N-i+2*j,i)+YM(N-i+2*j+2,i))/2;
    end
end

Z = zeros(N+1);
Y = zeros(N+1);
rc = zeros(N+1);

Z(1)=z(1,1);
Y(1)=y(1,1);
rc(1)=1;

for i = 2:N+1
rc(i)=rc(i-1)+ omega(i-1);
Z(i)=z(rc(i), i);
Y(i)=y(rc(i), i);
end
